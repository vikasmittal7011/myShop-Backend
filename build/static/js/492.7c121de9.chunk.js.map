{"version":3,"file":"static/js/492.7c121de9.chunk.js","mappings":"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","sources":["components/common/Button.js","components/common/Link.js","components/form/Input.js","pages/ResetPassword.js"],"sourcesContent":["const Button = ({ type, className, onClick,children }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Links = ({ className, to, name, onClick }) => {\r\n  return (\r\n    <Link to={to} className={`${className || \"\"}`} onClick={onClick}>\r\n      {name}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import Links from \"../common/Link\";\r\n\r\nconst Input = ({\r\n  title,\r\n  id,\r\n  type,\r\n  className,\r\n  showLink = false,\r\n  linkText,\r\n  linkNavigate,\r\n  linkClass,\r\n  placeHolder,\r\n  value,\r\n  onChange,\r\n  minLength,\r\n  errorMessage,\r\n  min,\r\n  max,\r\n  step,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    onChange(id, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between\">\r\n        <label\r\n          htmlFor={id}\r\n          className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n        >\r\n          {title}\r\n        </label>\r\n        {showLink && (\r\n          <div className=\"text-sm\">\r\n            <Links\r\n              to={linkNavigate}\r\n              className={`${\r\n                linkClass ||\r\n                \"font-semibold text-indigo-600 hover:text-indigo-500\"\r\n              }`}\r\n              name={linkText}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <input\r\n          id={id}\r\n          name={id}\r\n          type={type}\r\n          autoComplete=\"current-password\"\r\n          required\r\n          className={`${\r\n            className ||\r\n            \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          }`}\r\n          placeholder={placeHolder}\r\n          value={value}\r\n          onChange={handleChange}\r\n          minLength={minLength}\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n        />\r\n      </div>\r\n      <p className=\"text-red-600\">{errorMessage || null}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport logo from \"../assets/logo.png\";\r\nimport Input from \"../components/form/Input\";\r\nimport Links from \"../components/common/Link\";\r\nimport Button from \"../components/common/Button\";\r\nimport Loader from \"../components/common/Loader\";\r\nimport {\r\n  clearMessage,\r\n  resetPasswordAsync,\r\n  selectauth,\r\n} from \"../features/auth/authSlice\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n  const query = new URLSearchParams(window.location.search);\r\n  const token = query.get(\"token\");\r\n  const defaultValue = {\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const dispatch = useDispatch();\r\n  const { message, status, resetPassword } = useSelector(selectauth);\r\n  const [passwords, setPasswords] = useState(defaultValue);\r\n\r\n  const [wrongValues, setWrongValues] = useState(defaultValue);\r\n\r\n  const handlePassword = (id, value) => {\r\n    setPasswords({ ...passwords, [id]: value });\r\n    setWrongValues(defaultValue);\r\n  };\r\n\r\n  const validate = (data) => {\r\n    const passwordPattern =\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n\r\n    if (!passwordPattern.test(data.password)) {\r\n      setWrongValues({\r\n        password: `- at least 8 characters\\n\r\n          - must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\\n\r\n          - Can contain special characters`,\r\n      });\r\n      return false;\r\n    } else if (data.password !== data.confirmPassword) {\r\n      setWrongValues({\r\n        confirmPassword: `Password should be match`,\r\n      });\r\n      return false;\r\n    } else {\r\n      setWrongValues(defaultValue);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validform = validate(passwords);\r\n    if (validform) {\r\n      dispatch(\r\n        resetPasswordAsync({ token: token, password: passwords.password })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(clearMessage());\r\n    }, 4000);\r\n  }, [message?.message, dispatch]);\r\n\r\n  if (status === \"loading\") {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/\" replace={true} />;\r\n  }\r\n\r\n  if (resetPassword) {\r\n    return <Navigate to=\"/signin\" replace={true} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <img className=\"mx-auto h-16 w-auto\" src={logo} alt=\"Your Company\" />\r\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n            Change your password\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-xl\">\r\n          {message && (\r\n            <p className=\"text-red-600 my-3 font-bold text-2xl capitalize\">\r\n              {message?.message}\r\n            </p>\r\n          )}\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            <Input\r\n              title=\"New Password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeHolder=\"Enter your password...\"\r\n              value={passwords.password}\r\n              onChange={handlePassword}\r\n              minLength={8}\r\n              errorMessage={wrongValues.password}\r\n            />\r\n            <Input\r\n              title=\"Confirm Password\"\r\n              id=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeHolder=\"Enter password again...\"\r\n              value={passwords.confirmPassword}\r\n              onChange={handlePassword}\r\n              minLength={8}\r\n              errorMessage={wrongValues.confirmPassword}\r\n            />\r\n            <div>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n              >\r\n                Chnage Password\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n            Send me back to{\" \"}\r\n            <Links\r\n              to=\"/signin\"\r\n              className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\"\r\n              name=\"Login\"\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["_ref","type","className","onClick","children","_jsx","to","name","Link","concat","title","id","_ref$showLink","showLink","linkText","linkNavigate","linkClass","placeHolder","value","onChange","minLength","errorMessage","min","max","step","_jsxs","htmlFor","Links","autoComplete","required","placeholder","e","target","token","URLSearchParams","window","location","search","get","defaultValue","password","confirmPassword","dispatch","useDispatch","_useSelector","useSelector","selectauth","message","status","resetPassword","_useState","useState","_useState2","_slicedToArray","passwords","setPasswords","_useState3","_useState4","wrongValues","setWrongValues","handlePassword","_objectSpread","_defineProperty","useEffect","setTimeout","clearMessage","Loader","Navigate","replace","_Fragment","src","logo","alt","onSubmit","data","preventDefault","test","resetPasswordAsync","Input","Button"],"sourceRoot":""}