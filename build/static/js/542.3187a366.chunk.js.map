{"version":3,"file":"static/js/542.3187a366.chunk.js","mappings":"qHAYA,IAZe,SAAHA,GAA+C,IAAzCC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAAQC,EAAQJ,EAARI,SACzC,OACEC,EAAAA,EAAAA,KAAA,UACEJ,KAAMA,EACNC,UAAWA,EACXC,QAASA,EAAQC,SAEhBA,GAGP,C,8CCAA,IARc,SAAHJ,GAA0C,IAApCE,EAASF,EAATE,UAAWI,EAAEN,EAAFM,GAAIC,EAAIP,EAAJO,KAAMJ,EAAOH,EAAPG,QACpC,OACEE,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACF,GAAIA,EAAIJ,UAAS,GAAAO,OAAKP,GAAa,IAAMC,QAASA,EAAQC,SAC7DG,GAGP,C,8CC+DA,IArEc,SAAHP,GAiBJ,IAhBLU,EAAKV,EAALU,MACAC,EAAEX,EAAFW,GACAV,EAAID,EAAJC,KACAC,EAASF,EAATE,UAASU,EAAAZ,EACTa,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAQd,EAARc,SACAC,EAAYf,EAAZe,aACAC,EAAShB,EAATgB,UACAC,EAAWjB,EAAXiB,YACAC,EAAKlB,EAALkB,MACAC,EAAQnB,EAARmB,SACAC,EAASpB,EAAToB,UACAC,EAAYrB,EAAZqB,aACAC,EAAGtB,EAAHsB,IACAC,EAAGvB,EAAHuB,IACAC,EAAIxB,EAAJwB,KAMA,OACEC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACEqB,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oCAAmCE,SAAA,EAChDC,EAAAA,EAAAA,KAAA,SACEqB,QAASf,EACTT,UAAU,oDAAmDE,SAE5DM,IAEFG,IACCR,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAASE,UACtBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJrB,GAAIS,EACJb,UAAS,GAAAO,OACPO,GACA,uDAEFT,KAAMO,UAKdT,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAME,UACnBC,EAAAA,EAAAA,KAAA,SACEM,GAAIA,EACJJ,KAAMI,EACNV,KAAMA,EACN2B,aAAa,mBACbC,UAAQ,EACR3B,UAAS,GAAAO,OACPP,GACA,yMAEF4B,YAAab,EACbC,MAAOA,EACPC,SAvCa,SAACY,GACpBZ,EAASR,EAAIoB,EAAEC,OAAOd,MACxB,EAsCQE,UAAWA,EACXE,IAAKA,EACLC,IAAKA,EACLC,KAAMA,OAGVnB,EAAAA,EAAAA,KAAA,KAAGH,UAAU,eAAcE,SAAEiB,GAAgB,SAGnD,C,kKCyGA,UA/Je,WACb,IAAMY,GAAWC,EAAAA,EAAAA,MACjBC,GAAmCC,EAAAA,EAAAA,IAAYC,EAAAA,IAAvCC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAML,EAANK,OACxBC,GAAsCC,EAAAA,EAAAA,UAAS,CAC7CnC,KAAM,GACNoC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KACjBC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GALKO,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAOlCI,GAA4BR,EAAAA,EAAAA,UAAS,CAAC,GAAES,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAoB,SAAC3C,EAAIO,GAC7B+B,GAAcM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAAW,IAAAQ,EAAAA,EAAAA,GAAA,GAAG7C,EAAKO,KACvCmC,EAAU,GACZ,EA2DA,OANAI,EAAAA,EAAAA,YAAU,WACRC,YAAW,WACTzB,GAAS0B,EAAAA,EAAAA,MACX,GAAG,IACL,GAAG,CAAQ,OAAPpB,QAAO,IAAPA,OAAO,EAAPA,EAASA,QAASN,KAGpBR,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAAxD,SAAA,CACGkC,IAASjC,EAAAA,EAAAA,KAACwD,EAAAA,GAAQ,CAACvD,GAAG,IAAIwD,SAAS,IACxB,YAAXtB,GACCf,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,oEAAmEE,SAAA,EAChFqB,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,mCAAkCE,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OACEH,UAAU,sBACV6D,IAAKC,EACLC,IAAI,kBAEN5D,EAAAA,EAAAA,KAAA,MAAIH,UAAU,6EAA4EE,SAAC,6BAK7FqB,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,yCAAwCE,SAAA,EACrDC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,kDAAiDE,SACpD,OAAPmC,QAAO,IAAPA,OAAO,EAAPA,EAASA,WAEZd,EAAAA,EAAAA,MAAA,QAAMvB,UAAU,YAAYgE,SA3CjB,SAACnC,GAEpB,IApCgBoC,EAmChBpC,EAAEqC,kBA7BgB,MANFD,EAoCOnB,GA9BdzC,MACP8C,EAAU,CACRV,MAAO,yBAEF,GANP,qEAOuB0B,KAAKF,EAAKxB,OATjC,sDAc0B0B,KAAKF,EAAKvB,UAO3BuB,EAAKvB,WAAauB,EAAKtB,iBAChCQ,EAAU,CACRR,gBAAgB,8BAEX,IAEPQ,EAAU,KACH,IAbPA,EAAU,CACRT,SAAS,iKAIJ,IAVPS,EAAU,CACRV,MAAO,kCAEF,MAuBPV,GACEqC,EAAAA,EAAAA,IAAgB,CACd/D,KAAMyC,EAAYzC,KAClBoC,MAAOK,EAAYL,MACnBC,SAAUI,EAAYJ,YAGX,WAAXJ,GACFS,EAAe,IAGrB,EA4B6D7C,SAAA,EACjDC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJ7D,MAAM,OACNC,GAAG,OACHV,KAAK,OACLgB,YAAY,qBACZC,MAAO8B,EAAYzC,KACnBY,SAAUmC,EACVjC,aAAc+B,EAAO7C,QAEvBF,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJ7D,MAAM,gBACNC,GAAG,QACHV,KAAK,QACLgB,YAAY,8BACZC,MAAO8B,EAAYL,MACnBxB,SAAUmC,EACVjC,aAAc+B,EAAOT,SAEvBtC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJ7D,MAAM,WACNC,GAAG,WACHV,KAAK,WACLgB,YAAY,yBACZC,MAAO8B,EAAYJ,SACnBzB,SAAUmC,EACVlC,UAAW,EACXC,aAAc+B,EAAOR,YAEvBvC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJ7D,MAAM,mBACNC,GAAG,kBACHV,KAAK,WACLgB,YAAY,0BACZC,MAAO8B,EAAYH,gBACnB1B,SAAUmC,EACVlC,UAAW,KAEbf,EAAAA,EAAAA,KAAA,KAAGH,UAAU,eAAcE,SAAEgD,EAAOP,iBAAmB,QACvDxC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CACLvE,KAAK,SACLC,UAAU,yPAAwPE,SACnQ,kBAKLqB,EAAAA,EAAAA,MAAA,KAAGvB,UAAU,0CAAyCE,SAAA,CAAC,wBAC/B,KACtBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJrB,GAAG,UACHJ,UAAU,gEACVK,KAAK,oBAMbF,EAAAA,EAAAA,KAACoE,EAAAA,EAAM,MAIf,C","sources":["components/common/Button.js","components/common/Link.js","components/form/Input.js","pages/Signup.js"],"sourcesContent":["const Button = ({ type, className, onClick,children }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Links = ({ className, to, name, onClick }) => {\r\n  return (\r\n    <Link to={to} className={`${className || \"\"}`} onClick={onClick}>\r\n      {name}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import Links from \"../common/Link\";\r\n\r\nconst Input = ({\r\n  title,\r\n  id,\r\n  type,\r\n  className,\r\n  showLink = false,\r\n  linkText,\r\n  linkNavigate,\r\n  linkClass,\r\n  placeHolder,\r\n  value,\r\n  onChange,\r\n  minLength,\r\n  errorMessage,\r\n  min,\r\n  max,\r\n  step,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    onChange(id, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between\">\r\n        <label\r\n          htmlFor={id}\r\n          className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n        >\r\n          {title}\r\n        </label>\r\n        {showLink && (\r\n          <div className=\"text-sm\">\r\n            <Links\r\n              to={linkNavigate}\r\n              className={`${\r\n                linkClass ||\r\n                \"font-semibold text-indigo-600 hover:text-indigo-500\"\r\n              }`}\r\n              name={linkText}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <input\r\n          id={id}\r\n          name={id}\r\n          type={type}\r\n          autoComplete=\"current-password\"\r\n          required\r\n          className={`${\r\n            className ||\r\n            \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          }`}\r\n          placeholder={placeHolder}\r\n          value={value}\r\n          onChange={handleChange}\r\n          minLength={minLength}\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n        />\r\n      </div>\r\n      <p className=\"text-red-600\">{errorMessage || null}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport logo from \"../assets/logo.png\";\r\nimport Input from \"../components/form/Input\";\r\nimport Links from \"../components/common/Link\";\r\nimport Button from \"../components/common/Button\";\r\nimport {\r\n  clearMessage,\r\n  createUserAsync,\r\n  selectauth,\r\n} from \"../features/auth/authSlice\";\r\nimport Loader from \"../components/common/Loader\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const { token, message, status } = useSelector(selectauth);\r\n  const [credentials, setCredentials] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const manageCredentials = (id, value) => {\r\n    setCredentials({ ...credentials, [id]: value });\r\n    setErrors(\"\");\r\n  };\r\n\r\n  const validate = (data) => {\r\n    const passwordPattern =\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n    const emailPattern =\r\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,}(?:\\.[a-zA-Z]{2,})?$/;\r\n\r\n    if (data.name === \"\") {\r\n      setErrors({\r\n        email: \"Enter a valid name!\",\r\n      });\r\n      return false;\r\n    } else if (!emailPattern.test(data.email)) {\r\n      setErrors({\r\n        email: \"Enter a valid email address!\",\r\n      });\r\n      return false;\r\n    } else if (!passwordPattern.test(data.password)) {\r\n      setErrors({\r\n        password: `- at least 8 characters\\n\r\n        - must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\\n\r\n        - Can contain special characters`,\r\n      });\r\n      return false;\r\n    } else if (data.password !== data.confirmPassword) {\r\n      setErrors({\r\n        confirmPassword: `Password should be match`,\r\n      });\r\n      return false;\r\n    } else {\r\n      setErrors(\"\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const valid = validate(credentials);\r\n    if (valid) {\r\n      dispatch(\r\n        createUserAsync({\r\n          name: credentials.name,\r\n          email: credentials.email,\r\n          password: credentials.password,\r\n        })\r\n      );\r\n      if (status !== \"failed\") {\r\n        setCredentials(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(clearMessage());\r\n    }, 4000);\r\n  }, [message?.message, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {token && <Navigate to=\"/\" replace={true} />}\r\n      {status !== \"loading\" ? (\r\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n            <img\r\n              className=\"mx-auto h-12 w-auto\"\r\n              src={logo}\r\n              alt=\"Your Company\"\r\n            />\r\n            <h2 className=\"mt-8 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n              Create a new account\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-xl\">\r\n            <p className=\"text-red-600 my-3 font-bold text-2xl capitalize\">\r\n              {message?.message}\r\n            </p>\r\n            <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n              <Input\r\n                title=\"Name\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeHolder=\"Enter your name...\"\r\n                value={credentials.name}\r\n                onChange={manageCredentials}\r\n                errorMessage={errors.name}\r\n              />\r\n              <Input\r\n                title=\"Email address\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeHolder=\"Enter your gamil address...\"\r\n                value={credentials.email}\r\n                onChange={manageCredentials}\r\n                errorMessage={errors.email}\r\n              />\r\n              <Input\r\n                title=\"Password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeHolder=\"Enter your password...\"\r\n                value={credentials.password}\r\n                onChange={manageCredentials}\r\n                minLength={8}\r\n                errorMessage={errors.password}\r\n              />\r\n              <Input\r\n                title=\"Confirm Password\"\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeHolder=\"Enter password again...\"\r\n                value={credentials.confirmPassword}\r\n                onChange={manageCredentials}\r\n                minLength={8}\r\n              />\r\n              <p className=\"text-red-600\">{errors.confirmPassword || null}</p>\r\n              <div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            </form>\r\n            <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n              Alrady have a member?{\" \"}\r\n              <Links\r\n                to=\"/signin\"\r\n                className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\"\r\n                name=\"Login\"\r\n              />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["_ref","type","className","onClick","children","_jsx","to","name","Link","concat","title","id","_ref$showLink","showLink","linkText","linkNavigate","linkClass","placeHolder","value","onChange","minLength","errorMessage","min","max","step","_jsxs","htmlFor","Links","autoComplete","required","placeholder","e","target","dispatch","useDispatch","_useSelector","useSelector","selectauth","token","message","status","_useState","useState","email","password","confirmPassword","_useState2","_slicedToArray","credentials","setCredentials","_useState3","_useState4","errors","setErrors","manageCredentials","_objectSpread","_defineProperty","useEffect","setTimeout","clearMessage","_Fragment","Navigate","replace","src","logo","alt","onSubmit","data","preventDefault","test","createUserAsync","Input","Button","Loader"],"sourceRoot":""}